@using Syncfusion.EJ2
@using Newtonsoft.Json
@model FrontProcessView
@{
    var AllStuff = (ViewBagModel)ViewBag.AllStuff;
    ViewData["Title"] = @AllStuff.UITerms.Find(x => x.InternalName.Equals("Process")).TermString;
    ViewData["Image"] = "Process.png";
    ViewData["FavoriteGroup"] = AllStuff.FavoriteGroupList;
    Layout = "_Layout";
}
<div class="container">
    <div class="row">
        <div class="col-3">
            @AllStuff.UITerms.Find(x => x.InternalName.Equals("Process type")).TermString:
        </div>
        <div class="col-9">
            @Model.ProcessTypeName
        </div>
    </div>
    <div class="row">
        <div class="col-3">
            @AllStuff.UITerms.Find(x => x.InternalName.Equals("Stage")).TermString:
        </div>
        <div class="col-9">
            @Model.ProcessTypeStageName -
            @Model.ProcessTypeStageTypeName
        </div>
    </div>
    @foreach (var x in Model.ProcessFields)
    {
        if (new[] { 1, 2, 32 }.Contains(x.ProcessTypeFieldTypeId))//Text
        {
            <div class="row">
                <div class="col-3">
                    @x.ProcessTypeFieldName:
                </div>
                <div class="col-9">
                    @Html.Raw(x.StringValue)
                </div>
            </div>
        }
        if (new[] { 3 }.Contains(x.ProcessTypeFieldTypeId)) //Number
        {
            <div class="row">
                <div class="col-3">
                    @x.ProcessTypeFieldName:
                </div>
                <div class="col-9">
                    @x.IntValue
                </div>
            </div>
        }
        if (new[] { 4, 5, 6, 7, 8, 9 }.Contains(x.ProcessTypeFieldTypeId))//Date
        {
            <div class="row">
                <div class="col-3">
                    @x.ProcessTypeFieldName:
                </div>
                <div class="col-9">
                    @x.DateTimeValue
                </div>
            </div>
        }
        if (new[] { 12, 13 }.Contains(x.ProcessTypeFieldTypeId))//User
        {
            <div class="row">
                <div class="col-3">
                    @x.ProcessTypeFieldName:
                </div>
                <div class="col-9">
                    @x.PrimarySecondaryUserName
                </div>
            </div>
        }
        if (new[] { 14, 15 }.Contains(x.ProcessTypeFieldTypeId))//Organization
        {
            <div class="row">
                <div class="col-3">
                    @x.ProcessTypeFieldName:
                </div>
                <div class="col-9">
                    @x.PrimarySecondaryOrganizationName
                </div>
            </div>
        }
        if (new[] { 16, 17 }.Contains(x.ProcessTypeFieldTypeId))//Project
        {
            <div class="row">
                <div class="col-3">
                    @x.ProcessTypeFieldName:
                </div>
                <div class="col-9">
                    @x.PrimarySecondaryProjectName
                </div>
            </div>
        }
        if (new[] { 18, 19 }.Contains(x.ProcessTypeFieldTypeId))//Language
        {
            <div class="row">
                <div class="col-3">
                    @x.ProcessTypeFieldName:
                </div>
                <div class="col-9">
                    @x.PrimarySecondaryLanguageName
                </div>
            </div>
        }
        if (new[] { 20, 21 }.Contains(x.ProcessTypeFieldTypeId))//Classification
        {
            <div class="row">
                <div class="col-3">
                    @x.ProcessTypeFieldName:
                </div>
                <div class="col-9">
                    @x.PrimarySecondaryClassificationName
                </div>
            </div>
        }
        if (new[] { 22, 23 }.Contains(x.ProcessTypeFieldTypeId))//ClassificationValue
        {
            <div class="row">
                <div class="col-3">
                    @x.ProcessTypeFieldName:
                </div>
                <div class="col-9">
                    @x.PrimarySecondaryClassificationValueName
                </div>
            </div>
        }
        if (new[] { 24, 25 }.Contains(x.ProcessTypeFieldTypeId))//Content
        {
            <div class="row">
                <div class="col-3">
                    @x.ProcessTypeFieldName:
                </div>
                <div class="col-9">
                    @x.PrimarySecondaryContentTitle
                </div>
            </div>
        }
        if (new[] { 26, 27 }.Contains(x.ProcessTypeFieldTypeId))//Country
        {
            <div class="row">
                <div class="col-3">
                    @x.ProcessTypeFieldName:
                </div>
                <div class="col-9">
                    @x.PrimarySecondaryCountryName
                </div>
            </div>
        }
        if (new[] { 28, 29 }.Contains(x.ProcessTypeFieldTypeId))//SecurityLevel
        {
            <div class="row">
                <div class="col-3">
                    @x.ProcessTypeFieldName:
                </div>
                <div class="col-9">
                    @x.PrimarySecondarySecurityLevelName
                </div>
            </div>
        }
        if (new[] { 30, 31 }.Contains(x.ProcessTypeFieldTypeId))//Role
        {
            <div class="row">
                <div class="col-3">
                    @x.ProcessTypeFieldName
                </div>
                <div class="col-9">
                    @x.PrimarySecondaryRoleName:
                </div>
            </div>
        }
        if (new[] { 36, 37 }.Contains(x.ProcessTypeFieldTypeId))//Person
        {
            <div class="row">
                <div class="col-3">
                    @x.ProcessTypeFieldName:
                    @* PETER TODO Still not all scenarios are done *@
                </div>
                <div class="col-9">
                    <a asp-controller="FrontUser" asp-action="Dashboard" asp-route-id="@x.IntValue">
                        @x.PrimarySecondaryPersonName
                    </a>
                </div>
            </div>
        }
    }
</div>

