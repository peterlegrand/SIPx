@using Syncfusion.EJ2
@using Newtonsoft.Json
@model FrontContentShowContent
@{
    var Term = (List<UITermLanguageCustomizationList>)ViewBag.UITerms;
    ViewData["Title"] = @Term.Find(x => x.InternalName.Equals("Content")).TermString + " " + Model.Title;

    Layout = "_Layout";
}
<div class="container">
    <div class="row">
        <div class="col-12">
            <h1><img src="~/images/icons/Content.png" width="50" height="50" />&nbsp;@Term.Find(x => x.InternalName.Equals("Content")).TermString: @Model.Title</h1>
        </div>
    </div>
    <a data-toggle="modal" data-target="#exampleModal" style="cursor: pointer">
        <img src="~/images/icons/Favorites.png" width="20" height="20" title="@Term.Find(x => x.InternalName.Equals("Add favorite")).TermString" />
    </a>
    @if (Model.IsOwner)
    {
        <div class="row">
            <div class="col-12">
                <a asp-controller="FrontContent" asp-action="RightsEdit" asp-route-id="@Model.ContentId">
                    <img src="~/images/icons/User.png" width="20" height="20" />
                </a>
            </div>
        </div>
    }
    <div class="row">
        <div class="col-12">
            @Html.Raw(@Model.Description)
        </div>
    </div>
    <div class="row">

        <div class="col-2">
            <div> @Term.Find(x => x.InternalName.Equals("Id")).TermString: </div>
            <div> @Term.Find(x => x.InternalName.Equals("Parent content")).TermString:</div>
            <div> @Term.Find(x => x.InternalName.Equals("Status")).TermString:</div>
            <div> @Term.Find(x => x.InternalName.Equals("Type")).TermString:</div>
            <div> @Term.Find(x => x.InternalName.Equals("Organization")).TermString:</div>
            @if (Model.ProjectId != 0)
            {<div> @Term.Find(x => x.InternalName.Equals("Project")).TermString:</div>}
            <div> @Term.Find(x => x.InternalName.Equals("Security level")).TermString:</div>
            <div> @Term.Find(x => x.InternalName.Equals("Creator")).TermString</div>
            <div> @Term.Find(x => x.InternalName.Equals("Created date")).TermString</div>
            <div> @Term.Find(x => x.InternalName.Equals("Modifier")).TermString</div>
            <div> @Term.Find(x => x.InternalName.Equals("Modified date")).TermString</div>
        </div>
        <div class="col-3">
            <div> @Model.ContentId</div>
            <div> @Model.ParentContentTitle</div>
            <div> @Model.ContentStatusName</div>
            <div> @Model.ContentTypeName</div>
            <div> <a asp-controller="FrontOrganization" asp-action="Dashboard" asp-route-id="@Model.OrganizationId"> @Model.OrganizationName</a></div>
            @if (Model.ProjectId != 0)
            {
                <div> <a asp-controller="FrontProject" asp-action="Dashboard" asp-route-id="@Model.ProjectId"> @Model.ProjectName</a></div>

            }
            <div> @Model.SecurityLevelName</div>
            <div> <a asp-controller="FrontPerson" asp-action="Dashboard" asp-route-id="@Model.CreatorId"> @Model.CreatorName</a></div>
            <div> @Model.CreatedDate</div>
            <div> <a asp-controller="FrontPerson" asp-action="Dashboard" asp-route-id="@Model.ModifierId"> @Model.ModifierName</a></div>
            <div> @Model.ModifiedDate</div>
        </div>
    </div>
    @foreach (var x in Model.ClassificationValues)
    {

        <div class="row">
            <div class="col-2">
                <div> @x.ClassificationName </div>
            </div>
            <div class="col-3">
                <div> <a asp-controller="FrontClassificationValue" asp-action="Dashboard" asp-route-id="@x.ClassificationValueId"> @x.ClassificationValueName</a></div>
            </div>
        </div>

    }

</div>
